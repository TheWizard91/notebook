{"version":3,"sources":["logo.svg","components/RegisterForm.js","firebase/firebase.js","contexts/AuthContext.js","firebase/firestore.js","firebase/realtimeDatabase.js","firebase/Storage.js","components/ForgotPassword.js","components/Footer.js","components/ImageUploader.js","components/LoadPosts.js","components/Note.js","components/UpdateProfile.js","components/Dashboard.js","components/NotificationsPage.js","components/LoadPage.js","components/New.js","components/Images.js","components/MainPage.js","components/LogIn.js","components/SignUp.js","components/PrivateRoute.js","components/StartAppNav.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","setUserId","createElement","Provider","db","firestore","realtimeDB","storage","database","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ForgotPassword","emailRef","useRef","setError","message","setMessage","_useState5","_useState6","navigate","useNavigate","_handleSubmit","_asyncToGenerator","_callee","e","_context","preventDefault","current","alert","t0","apply","arguments","Card","Body","className","Alert","variant","Form","onSubmit","_x","Group","id","Label","Control","ref","required","Button","disabled","Link","to","element","LogIn","SignUp","Footer","windowWidth","window","innerWidth","windowHeight","innerHeight","width","setWidth","setHeight","footer_width","setFooterWidth","_useState7","_useState8","setPaddingLeft","_useState9","_useState10","paddingR","setPaddingRight","_useState11","_useState12","buttonSize","setButtonSize","document","getElementById","getAttribute","setAttribute","style","paddingRight","marginLeft","href","data-tooltip","data-position","marginRight","ImageUploader","onChange","src","htmlFor","for","Name","_ref2","maxlength","placeholder","Status","_ref3","maxLength","Profile","_ref4","status","class","Edit","_ref5","LoadPosts","post","time","post_id","post_image","likes","favorites","current_user_firstname","current_user_lastname","current_user_profile_image","current_user_id","postID","visible","setVisibility","editTextValue","postInFirestoreDatabase","setPostInFirestoreDatabase","time_in_firestore_database","likesInFirestoreDatabase","setLikesInFirestoreDatabase","_useState13","_useState14","favoritesInFirestoreDatabase","setFavoriteInFirestoreDatabase","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","user_id","_useState24","_useState25","_useState26","postIdInFirestoreDatabase","docRef","doc","greenRef","blackRef","dusty_white","medium_purple","ice_cold","_useState27","_useState28","editPostClicks","seteditPostClicks","_useState29","_useState30","_useState31","_useState32","likesColor","setLikesColor","_useState33","_useState34","countLikesClicks","setCountLikesClicks","_useState35","_useState36","favoritesColor","setFavoritesColor","_useState37","_useState38","countFavoriteClicks","setCountFavoriteClicks","user_profile_image_ref","handleOnClickSetting","console","log","handleOnClickFavorites","updateDoc","merge","handleOnClickLikes","handleOnClickUser","borderRadius","borderWidth","borderColor","backgroundColor","color","onClick","Divider","iverted","horizontal","Transition","animation","duration","target","marginBottom","content","Note","u_firstname","u_lastname","u_profile_image","u_id","inputRef","time_stamp","setTimeStamp","setPost","setLikesCount","setFavoriteCount","setPostID","user_firstname","setUserFirstname","user_lastname","setUserLastname","user_profile_image","setUserProfileImage","postsDictionary","setPostDictionary","postsFromFirebase","postURI","uuid","height","heightOfOuterRow","paddingTopOfOuterRow","header","inputHint","columnTwoMaxHeight","numberOfColumns","setNumberOfColumns","gravityWidthOfColumnOne","setGravityWidthOfColumnOne","segmentOneHeight","gravityWidthOfColumnTwo","setGravityWidthOfColumnTwo","_useState39","_useState40","_useState41","_useState42","_useState43","_useState44","display_desktop_button","setDsplayDesktopButton","_useState45","_useState46","display_mobile_button","setDisplayMobileButton","_useState47","_useState48","_useState49","_useState50","setRightCornerStar","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","_useState65","_useState66","_useState67","_useState68","_useState69","_useState70","_useState71","_useState72","_useState73","_useState74","_useState75","_useState76","text_area_height","setTextAreaHeight","_useState77","_useState78","text_area_width","setTextAreaWidth","_useState79","_useState80","text_area_radius","setTextAreaRadius","_useState81","_useState82","_useState83","_useState84","rose_white","collection","get","querySnapshot","data","index","_time_stamp","_enter_post","_likes_count","_favorites_count","enter_post","likes_count","favorites_count","firstname","lastname","profile_image_uri","_x2","sendPost","post_text","Date","toLocaleDateString","weekday","year","month","day","set","profile_image","JSON","stringify","addEventListener","fetchData","Grid","columns","reversed","stackable","rel","Row","paddingTop","stretched","Column","Segment","rows","size","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","paddingLeft","marginTop","display","overflow","maxHeight","map","UpdateProfile","_useAuth","newFirstname","newLastname","newEmail","newPassword","confirmNewPassword","setOldFirstname","setOldLastname","setOldEmail","setOldPassWord","setOldProfileImageURL","old_profile_image_uri","usersData","window_width_ref","window_heigth_ref","adjust_horizontal_position","adjust_vertical_postion","form_width","setFormWidth","form_height","setFormHeight","handleChange","height_for_form","uid","snapshot","exists","old_firstname","firstName","old_lastname","lastName","old_email","old_password","profileImage","textAlign","verticalAlign","transform","minWidth","promises","all","finally","Header","Field","Input","label","icon","defaultValue","Dashboard","setFirstname","setLastname","setPassword","setProfileImage","setEmail","dataFromRealTimeDatabase","currentUserUID","_handleLogOut","_unused","Image","floated","wrapped","ui","Content","extra","NotificationsPage","LoadPage","page","id_of_current_user","_logginout","logginout","New","Images","MainPage","_React$useState","_React$useState2","active_item","setIconsSize","f_name","l_name","p_image","t_current_user_id","setTemporaryCurrentUserId","user_information_query","setUserInformationQuery","fake_id","setRealUserIdToUser","setEmailRef","_React$useState3","_React$useState4","passwordRef","setPasswordRef","headerString","formWidth","formHeight","screenSize","l","width_original_lenght","height_original_lenght","height_length_to_set","centered","confirm_password","setConfirmPassword","current_user","form_heigth","user_uri","firstname_of_current_user","lastname_of_current_user","email_of_current_user","password_of_current_user","current_user_id_uri","loadUserInformationToFirebaseDatabase","setTimeout","loadNotificationToRealtimeDB","user_elmail","user_password","notification_time","temporary_user_id","real_user_id","PrivateRoute","component","_objectWithoutProperties","Outlet","Navigate","StartAppNav","App","Container","vertical","Router","Routes","Route","path","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4d1b8363.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState, setState, setData, Component} from 'react'\nimport {Button, Checkbox, Form} from \"semantic-ui-react\"\n// import 'semantic-ui-css/semantic.min.css'\nimport '../styles/loginForm.css';\n// import {initializeApp} from \"firebase/app\"\n// import {getFirestore, collection, getAuth, createUserWithEmailAndPassword } from \"firebase/auth\"\n// import { getAnalytics } from \"firebase/analytics\";\n\nclass RegisterForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleFirstName = (event) =>{\n        // this.setData({firstName: e.target.value})\n        // event.preventDefault()\n        // alert(e.target.value)\n        this.setState({firstName: event.target.value})\n        // console.log(this.state.firstName)\n        // alert(this.state.firstName)\n    \n    } \n    \n    handleLastName(e) {\n        e.preventDefault()\n        this.setState({lastName: e.target.value})\n    }\n    \n    handleEmail(e) {\n        e.preventDefault()\n        this.setState({email: e.target.value})\n    }\n    \n    handlePassword(e) {\n        e.preventDefault()\n        this.setState({password: e.target.value})\n    }\n    \n    handleLogIn() {\n        console.log(\"First Name: \"+this.state.firstName)\n        console.log(\"Last Name: \"+this.state.lastName)\n        console.log(\"Email: \"+this.state.mail)\n        console.log(\"Password: \"+this.state.password)\n    }\n    \n\n    render() {\n\n        return(\n            <div>\n                <Form>\n        \n                    <Form class=\"formStyles\">\n                        <label>First Name</label>\n                        <input \n                            type=\"text\"\n                            name=\"firtst name\"\n                            placeholder=\"First Name\"\n                            value={this.state.firstName}\n                            onChange={this.handleFirstName} />\n                    </Form>\n    \n                    <Form.Field className=\"formStyles\">\n                        <label>Last Name</label>\n                        <input\n                            type=\"text\"\n                            name=\"last name\"\n                            placeholder=\"Last Name\" \n                            value={this.state.lastName}\n                            onChange={this.handleLastName} />\n                    </Form.Field>\n    \n                    <Form.Field className=\"formStyles\">\n                        <label>E-mail</label>\n                        <input\n                            type=\"text\"\n                            name=\"email\"\n                            placeholder=\"E-mail\" \n                            value={this.state.email}\n                            onChange={this.handleEmail} />\n                    </Form.Field>\n    \n                    <Form.Field className=\"formStyles\">\n                        <label>Password</label>\n                        <input \n                            type=\"text\"\n                            name=\"passwword\"\n                            placeholder=\"Password\" \n                            value={this.state.password}\n                            onChange={this.handlePassword} />\n                    </Form.Field>\n    \n                </Form>\n    \n                <button class=\"ui primary button\">Sign Up</button><button class=\"ui secondary button\">Already Have an Account?</button>\n                {/* <div><button class=\"ui primary button\">Primary</button><button class=\"ui secondary button\">Secondary</button></div> */}\n    \n            </div>\n        )\n    }\n}\n\nconst Buttons = () => (\n    <div>\n        <Button content=\"SignUp\" Sign Up />\n        <Button content=\"Already Have na Account?\" Already Have an Account />\n    </div>\n)\n\nexport default RegisterForm;","// import firebase from \"firebase/app\"\n// import \"firebase/auth\"\n// The following imports are an update to the ones above V9.\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport {getFirestore} from \"firebase/firestore/lite\"\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUMENT_ID\n})\n\nexport const auth = app.auth()\nexport default app","import React, { useContext, useState, useEffect } from 'react'\nimport { auth } from \"../firebase/firebase\"\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({children}) {\n\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    // Creating the user no work is needed as firebase does it.\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email,password)\n    }\n\n    // Logging the user in.\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    // Letting the user logging out\n    function logout() {\n        return auth.signOut()\n    }\n    \n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email)\n    }\n    \n    function updateEmail(email) {\n        return currentUser.updateEmail(email)\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password)\n    }\n    \n    function setCurrentUserUID(currentUser) {\n        return currentUser.uid\n    }\n\n    function setUserId() {\n        return currentUser\n    }\n\n    useEffect(() => {       //  Set the user for us.\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })  \n    \n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword,\n        setUserId,\n    }\n    return (\n        <AuthContext.Provider value = { value }>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\n  \nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUMENT_ID\n};\n  \nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n  \nexport default db;","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/database';\n  \nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUMENT_ID\n};\n  \nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst realtimeDB = firebase.database();\n  \nexport default realtimeDB;","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\n  \nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUMENT_ID\n};\n  \nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\n  \nexport default storage;","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport SignUp from \"./SignUp\"\nimport LogIn from \"./LogIn\"\n\n\nexport default function ForgotPassword() {\n    const emailRef = useRef()\n    const {resetPassword} = useAuth()\n    const [error, setError] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const navigate = useNavigate()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setMessage(\"\")\n            setError(\"\")\n            setLoading(true)\n            await resetPassword(emailRef.current.value)\n            setMessage(\"Check your inbox for further instructions\")\n            alert(\"Val: \"+emailRef.current.value)\n            navigate(\"/login\")\n        } catch {\n            setError(\"Failed to reset password\")\n            alert(\"Val: \"+emailRef.current.value)\n        }\n        setLoading(false)\n        }\n\n    return (\n        <div>\n        <Card>\n            <Card.Body>\n                <h2 className=\"text-center mb-4\">Password Reset</h2>\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                {message && <Alert variant=\"success\">{message}</Alert>}\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group id=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" ref={emailRef} required />\n                    </Form.Group>\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                        Reset Password\n                    </Button>\n                </Form>\n                <div className=\"w-100 text-center mt-3\">\n                    No need to change password? \n                    <Link to=\"/\" element={<LogIn/>}>Login</Link>\n                </div>\n            </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n            Need an account? <Link to=\"/signup\" element={<SignUp />}>Sign Up</Link>\n        </div>\n        </div>\n    )\n}\n","import React, {useRef,useState,useEffect} from 'react';\nimport 'semantic-ui-react'\nimport {Link, useNavigate} from \"react-router-dom\"\n\nfunction Footer () {\n\n    // getting the size of window\n    const windowWidth = useRef(window.innerWidth)\n    const windowHeight = useRef(window.innerHeight)\n\n    // setting the with size for the buttons \n    // through useEffect()\n    const [width, setWidth] = useState(\"10%\")\n    const [height, setHeight] = useState(\"10%\")\n    const [footer_width, setFooterWidth] = useState(\"100%\")\n    const [paddingL, setPaddingLeft] = useState(\"0px\")\n    const [paddingR,setPaddingRight] = useState(\"0px\")\n\n    const [buttonSize, setButtonSize] = useState(\"big\")\n\n    useEffect(() => {\n        // console.log(\"in useeffect\")\n        // console.log(\"windowHeight: \",windowHeight.current)\n        // console.log(\"windowWidth: \",windowWidth.current)\n        if (windowHeight.current > windowWidth.current) {\n            setFooterWidth(\"100%\")\n            setPaddingLeft(\"0%\")\n            setPaddingRight(\"0%\")\n            setWidth(\"5%\")\n            setHeight(\"5%\")\n            setButtonSize(\"large\")\n            let element = document.getElementById(\"stayConnectedId\")\n            let hidden = element.getAttribute(\"hidden\")\n            element.setAttribute(\"hidden\",\"hidden\")\n        } else {\n            setFooterWidth(\"67%\");\n        }\n    })\n\n    return (\n        <center>\n            <div className = \"ui vertical footer segment form-page\" style = {{width:footer_width,paddingRight:paddingR,}}>\n                <div className = \"ui container\" style = {{marginLeft:\"0px\"}}>\n                    <div id = \"stayConnectedId\">\n                        <h1 id = \"connect\" className = \"ui header\">Stay Connected</h1>\n                    </div>\n                    <div id = \"links\">\n                        <a \n                            href = {\"https://www.linkedin.com/in/emmanuel-kofi-agyapong-783807bb/\"}\n                            id = \"linkedinIcon\">\n                            <button \n                                className = \"ui circular linkedin icon button\"\n                                data-tooltip = \"Checkout my LinkedIn.\" \n                                data-position = \"top center\"\n                                style = {{marginRight:width}}> \n                                <i className = {buttonSize+\" linkedin icon\"}></i>\n                            </button>\n                        </a>\n                        <a \n                            href = {\"https://github.com/TheWizard91\"}\n                            id = \"githubIcon\">\n                            <button \n                                className = \"ui circular yellow github icon button\"\n                                data-tooltip = \"Checkout my Github repos.\" \n                                data-position = \"top center\"\n                                style = {{marginRight:width,marginLeft:width}}>\n                                <i className = {buttonSize+\" github alternate icon\"}></i>\n                            </button>\n                        </a>\n                            <a \n                                href = {\"https://github.com/TheWizard91\"}\n                                id = \"emailIcon\">\n                                <button \n                                    className = \"ui circular green envelop icon button\"\n                                    data-tooltip = \"Send me an email.\" \n                                    data-position = \"top center\"\n                                    style = {{marginLeft:width}}>\n                                    <i className = {buttonSize+\" envelope icon\"}></i>\n                                </button>\n                            </a>\n                    </div>\n                </div>\n            </div>\n        </center>\n    )\n}\n\nexport default Footer","import React,{useState,useEffect,useRef} from \"react\"\n\nimport \"../styles/imageUploader.css\"\n\nconst ImageUploader =({\n  onChange,\n  src\n})=>\n  <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\n    <div className=\"img-wrap img-upload\" >\n      <img for=\"photo-upload\" src={src}/>\n    </div>\n    <input id=\"photo-upload\" type=\"file\" onChange={onChange}/> \n  </label>\n\n\nconst Name =({\n  onChange,\n  value\n})=>\n  <div className=\"field\">\n    <label htmlFor=\"name\">\n      name:\n    </label>\n    <input \n      id=\"name\" \n      type=\"text\" \n      onChange={onChange} \n      maxlength=\"25\" \n      value={value} \n      placeholder=\"Alexa\" \n      required/>\n  </div>\n\n  \nconst Status =({\n  onChange,\n  value\n})=>\n  <div className=\"field\">\n    <label htmlFor=\"status\">\n      status:\n    </label>\n    <input \n      id=\"status\" \n      type=\"text\" \n      onChange={onChange} \n      maxLength=\"35\" \n      value={value} \n      placeholder=\"It's a nice day!\" \n      required/>\n  </div>\n\n\nconst Profile =({\n  onSubmit,\n  src,\n  name,\n  status,\n})=>\n  <div className=\"cards\">\n    <form class=\"my_form\" onSubmit={onSubmit}>\n      <h1>Profile Card</h1>\n      <label className=\"custom-file-upload fas\">\n        <div className=\"img-wrap\" >\n          <img for=\"photo-upload\" src={src}/>\n        </div>\n      </label>\n      <div className=\"name\">{name}</div>\n      <div className=\"status\">{status}</div>\n      <button class=\"my_button\" type=\"submit\" className=\"edit\">Edit Profile </button>\n    </form>\n  </div>\n     \n      \nconst Edit =({\n  onSubmit,\n  children,\n})=>\n  <div className=\"cards\">\n    <form class=\"my_form\" onSubmit={onSubmit}>\n      <h1>Profile Card</h1>\n        {children}\n      <button class=\"my_button\" type=\"submit\" className=\"save\">Save </button>\n    </form>\n  </div>\n\nclass CardProfile extends React.Component {\n  state = {\n    file: '',\n    imagePreviewUrl: 'https://github.com/OlgaKoplik/CodePen/blob/master/profile.jpg?raw=true',\n    name:'',\n    status:'',\n    active: 'edit'\n  }\n\n  photoUpload = e =>{\n    e.preventDefault();\n    const reader = new FileReader();\n    const file = e.target.files[0];\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    }\n    reader.readAsDataURL(file);\n  }\n  editName = e =>{\n    const name = e.target.value;\n    this.setState({\n      name,\n    });\n  }\n  \n  editStatus = e => {\n    const status = e.target.value;\n    this.setState({\n      status,\n    });\n  }\n  \n  handleSubmit= e =>{\n    e.preventDefault();\n    let activeP = this.state.active === 'edit' ? 'profile' : 'edit';\n    this.setState({\n      active: activeP,\n    })\n  }\n  \n  render() {\n    const {imagePreviewUrl, \n           name, \n           status, \n           active} = this.state;\n    return (\n      <div>\n        <h1>Image Uploader</h1>\n        {(active === 'edit')?(\n          <Edit onSubmit={this.handleSubmit}>\n            <ImageUploader onChange={this.photoUpload} src={imagePreviewUrl}/>\n            <Name onChange={this.editName} value={name}/>\n            <Status onChange={this.editStatus} value={status}/>\n          </Edit>\n        ):(\n          <Profile \n            onSubmit={this.handleSubmit} \n            src={imagePreviewUrl} \n            name={name} \n            status={status}/>)}\n        \n      </div>\n    )\n  }\n} \n\nexport default ImageUploader","import React,{useState,useEffect,useRef} from \"react\"\nimport {Card,Button,Grid,Segment,Divider,Transition,Image} from \"semantic-ui-react\"\nimport {Link, useNavigate} from \"react-router-dom\"\nimport db from \"../firebase/firestore\"\nimport {doc,setDoc,updateDoc} from \"firebase/firestore\"\nimport imageUploader from \"./ImageUploader\"\n\nfunction LoadPosts ({post, time, post_id, post_image, likes, favorites, current_user_firstname, current_user_lastname, current_user_profile_image, current_user_id}) {\n    \n    // \n    const [postID, setPostID] = useState({postID: []})\n    const [visible, setVisibility] = useState({visible: false})\n    const [editTextValue,setEditTextValue] = useState()\n    const userProfileImagePath = useRef(\"https://emmanuelcodes.netlify.app/profile_image.7e798b21.jpg\")\n\n    // Firebase Database\n    const [postInFirestoreDatabase, setPostInFirestoreDatabase] = useState(post)\n    const [time_in_firestore_database, setTimeInFirestoreDatabase] = useState(time)\n    const [likesInFirestoreDatabase, setLikesInFirestoreDatabase] = useState(likes)\n    const [favoritesInFirestoreDatabase, setFavoriteInFirestoreDatabase] = useState(favorites);\n    const [image_of_the_post, setPostImage] = useState(post_image);\n    const [user_firstname, setUserFisrstname] = useState(current_user_firstname);\n    const [uset_lastname, setUserLastname] = useState(current_user_lastname);\n    const [user_profile_image, setUserProfileImage] = useState(current_user_profile_image);\n    const [user_id, setUserId] = useState(user_id);\n    const [postIdInFirestoreDatabase, setPostIdInFirestoreDatabase] = useState(post_id);\n    const docRef = doc(db, \"posts\", post_id);\n    \n    // Colors\n    const greenRef = useRef(\"#34CCAD\");\n    const blackRef = useRef(\"#000000\");\n    const dusty_white = useRef(\"#edf756\");\n    const medium_purple = useRef(\"#d0bdf4\");\n    const dark_sand = useRef(\"#a28089\");\n    const ice_cold = useRef(\"#a0d2eb\");\n    const white_ivory = useRef(\"#FFFFF0\");\n\n\n    // Edit post or textarea\n    const [editPostClicks, seteditPostClicks] = useState(1)\n    // const greenColor=useRef(\"\")\n\n    // User\n    const [userColor, setUserColor] = useState(\"black\")\n\n    // Likes starting from 1 becuase 0%2==0, and if we start from 0,\n    // get false because when we startt handleOn.....\n    // countFavoriteClicks==0 inside of the function.\n    const [likesColor, setLikesColor] = useState(\"black\")\n    const [countLikesClicks, setCountLikesClicks] = useState(1)\n\n    // Favotites\n    const [favoritesColor, setFavoritesColor] = useState(\"black\")\n    const [countFavoriteClicks, setCountFavoriteClicks] = useState(1);\n\n    const navigate = useNavigate();\n\n    const user_profile_image_ref = useRef(\"https://semantic-ui.com/images/avatar2/small/patrick.png\");\n\n    /**TODO: I have setFavoriteInFirestoreDatabase(favoritesInFirestoreDatabase+1) or\n     * setFavoriteInFirestoreDatabase(favoritesInFirestoreDatabase-1) to increase ordecrese\n     * the \n     */\n    \n    const handleOnClck = (e, {name, value}) => {\n        switch (name) {\n            case \"setting_image\":\n                handleOnClickSetting();\n                break;\n            case \"likes\":\n                handleOnClickLikes();\n                break;\n            case \"start\":\n                handleOnClickFavorites();\n                break;\n            case \"user\":\n                handleOnClickUser();\n                break;\n        }\n    }\n\n    const handleOnClickSetting = () => {\n        console.log(\"setting clicked!\");\n    }\n    const handleOnClickFavorites = () => {\n        setCountFavoriteClicks(countFavoriteClicks+1)\n        console.log(\"before: \"+countFavoriteClicks)\n        if((countFavoriteClicks%2) == 1) {\n            setFavoritesColor(greenRef.current)\n            setFavoriteInFirestoreDatabase(favoritesInFirestoreDatabase+1)\n            updateDoc(docRef,{\n                favorites:1//favoritesInFirestoreDatabase\n            },{\n                merge:true\n            }).then(() => console.log(\"favorites updated\"))\n        } else {   \n            setFavoritesColor(blackRef.current)\n            setFavoriteInFirestoreDatabase(favoritesInFirestoreDatabase-1)\n            updateDoc(docRef,{\n                favorites:0//favoritesInFirestoreDatabase\n            },{\n                merge:true\n            }).then(() => console.log(\"favorites updated\"))\n        }\n    }\n\n    const handleOnClickLikes = () => {\n        setCountLikesClicks(countLikesClicks+1)\n        if((countLikesClicks%2) == 1) {\n            setLikesColor(greenRef.current)\n            setLikesInFirestoreDatabase(likesInFirestoreDatabase+1)\n            updateDoc(docRef,{\n                likes:1//likesInFirestoreDatabase\n            },{\n                merge:true\n            }).then(() => console.log(\"likes updated\"))\n        } else {\n            setLikesColor(blackRef.current)\n            setLikesInFirestoreDatabase(likesInFirestoreDatabase-1)\n            updateDoc(docRef,{\n                likes:0//likesInFirestoreDatabase\n            },{\n                merge:true\n            }).then(() => console.log(\"likes updated\"))\n        }\n    }\n\n    const editPost = (e) => {\n        e.preventDefault()\n        setVisibility(!visible)\n        seteditPostClicks(editPostClicks+1)\n        // console.log(\"editPostClicks: \"+editPostClicks)\n    }\n\n    const handleEditTextChange = (e) =>{\n        e.preventDefault()\n        if ((editPostClicks%2) == 0){\n            setPostInFirestoreDatabase(e.target.value)\n        }\n        updateDoc(docRef,{\n            post:e.target.value\n        },{\n            merge:true\n        }).then(()=>console.log(\"post updated\"))\n    }  \n\n    const initializeLikesColor = () => {\n        // console.log(\"initializeLikesColor: \"+favoritesInFirestoreDatabase)\n        if(favoritesInFirestoreDatabase > 0){\n            setFavoritesColor(greenRef.current)\n            // favoritesColor=greenRef.current\n        } else{\n            setFavoritesColor(blackRef.current)\n        }\n    }\n\n    const initializeFavoritesColor = () => {\n        // console.log(\"initializeFavoritesColor: \"+likesInFirestoreDatabase)\n        if(likesInFirestoreDatabase>0){\n            setLikesColor(greenRef.current)\n        } else {\n            setLikesColor(blackRef.current)\n        }\n    }\n\n    const handleOnClickUser = () => {\n        console.log(\"user clicked!\");\n        navigate(\"image-uploader\");\n    }\n\n    useEffect (()=>{\n\n        /**Only for initial values. When the app starts the likes and favorites are \n         * set, becuase the has been fetched from the data from the database;\n         * which is why I had the info passed as parameters in the very brggining.\n        */\n        console.log(\"user_profile_image_ref: \",user_profile_image_ref);\n        setVisibility(false)\n        initializeFavoritesColor()\n        initializeLikesColor()\n    },[])\n\n    return (\n        <div>\n            <Card\n                className = \"ui centered card\"\n                id = \"livePostCardview\" \n                style = {{width:\"100%\", \n                        borderRadius:\"1em\",\n                        borderWidth:\"medium\",\n                        borderColor:\"red\",\n                        backgroundColor:\"#e5eaf5\"}}>\n                <div className = \"content\">\n                    {/* <Button\n                        name = \"setting_image\"//profile_image\n                        value = \"setting_button\" // user_profile_image\n                        className = \"right floated ui circular settings pastel gray icon button\" //right floated ui circular pastel gray icon button\n                        style = {{color:userColor, \n                                backgroundColor:dark_sand.current}}\n                        onClick = {handleOnClck}>\n                        <i className = \"setting icon\" //circle outline\n                        > \n                        </i>\n                    </Button> */}\n                    <Button \n                        name = \"likes\"\n                        value = \"heart\"\n                        className = \"right floated ui circular pastel gray icon button\"\n                        style = {{color:likesColor,\n                                backgroundColor:medium_purple.current}}\n                        onClick = {handleOnClck}>\n                        <i className = \"like icon\"></i>\n                    </Button>\n                    <Button \n                        name = \"star\"\n                        value = \"favorites\"\n                        className = \"right floated ui circular pastel gray icon button\"\n                        style = {{color:favoritesColor, \n                                backgroundColor:dusty_white.current}}\n                        onClick = {handleOnClickFavorites}>\n                        <i className = \"star icon\"></i>\n                    </Button>\n                    {/* <Image\n                        // className = \"ui image tiny avatar\" \n                        avatar\n                        src = {user_profile_image_ref} /> */}\n                    {/* <Button \n                        name = \"user\"\n                        value = \"user_name\"\n                        className = \"left floated ui circular pastel gray icon button\"\n                        style = {{color:white_ivory.current, \n                                backgroundColor:\"black\"}}\n                        onClick = {handleOnClck}>\n                        <i className = \"user icon\"></i>\n                    </Button> */}\n                    <div \n                        className = \"ui left floated text\"//ui left floated header\n                        style = {{width: \"fit-content\"}}\n                        >{time_in_firestore_database}\n                    </div>\n                    <p></p>\n                    <div className = \"description\">\n                        {postInFirestoreDatabase}\n                    </div>\n                    <Divider \n                        iverted\n                        horizontal \n                        color = \"#a28089\">\n                            Edit Post Or Reply\n                    </Divider>\n                    <Transition\n                        visible = {visible} \n                        animation = \"scale\" \n                        duration = {500}>\n                        <textarea\n                            id = \"input-element\"\n                            className = \"ui segment\"\n                            type = \"text\"\n                            value = {editTextValue}\n                            name = \"message\"\n                            style = {{width: \"100%\"}}\n                            onChange = {handleEditTextChange}\n                            placeholder = 'Type anything...'/>\n                    </Transition>\n                </div>\n                <div>\n                    <Button\n                        className = \"ui circular icon button\"\n                        style = {{backgroundColor:ice_cold.current,\n                                width:\"fit-item\",\n                                color:\"#1E90FF\", // dodger-blue:1E90FF,a white:f5f5f5\n                                marginBottom:\"10px\"}}\n                        value = {postIdInFirestoreDatabase}\n                        onClick = {editPost}\n                        data-tooltip = \"Edit.\" \n                        data-position = \"top center\"\n                        content = {visible ? 'Hide' : 'Show'}>\n                        <i className = \"edit icon\"></i>\n                    </Button>{/**myBlue#89CFF0 iceCold:#a0d2eb*/}\n                    {/* <Button\n                        className = \"ui circular icon button\"\n                        style = {{backgroundColor:ice_cold.current,\n                                width:\"fit-item\",\n                                color:\"#1E90FF\", // dodger-blue:1E90FF,a white:f5f5f5\n                                marginBottom:\"10px\"}}\n                        value = {postIdInFirestoreDatabase}\n                        onClick = {editPost}\n                        data-tooltip = \"Reply.\" \n                        data-position = \"top center\"\n                        content = {visible ? 'Hide' : 'Show'}>\n                        <i className = \"reply icon\"></i>\n                    </Button> */}\n                    {/**myBlue#89CFF0 iceCold:#a0d2eb*/}\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default LoadPosts","import React, {useRef, useState, setState, useEffect} from \"react\"\nimport {Button, Card, Grid, Segment, Menu, Icon, Divider} from \"semantic-ui-react\"\n// import 'semantic-ui-css/semantic.min.css'\nimport ref from \"../firebase/Storage\"\nimport realtimeDB from '../firebase/realtimeDatabase';\n\nimport app from \"../contexts/AuthContext\"\n// import firebase from \"../firebase/firebase\"\nimport {firestore, collection, query, where, getDock} from \"../firebase/firestore\"\nimport db from \"../firebase/firestore\"\nimport {useAuth, logout, signOut} from \"../contexts/AuthContext\"\n\nimport {Link, useNavigate} from \"react-router-dom\"\nimport LogIn from \"./LogIn\"\n\nimport \"../styles/notebookComponent.css\"\nimport \"../App.css\"\n\nimport LoadPosts from \"./LoadPosts\"\n\n//import uuid v4\nimport {v4 as uuid} from 'uuid';\n\nfunction Note({u_firstname, u_lastname, u_profile_image, u_id}) {\n\n  /**TODO: Need to add the username for post and user id as well as the made up id. */\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const inputRef = useRef(null);\n  const [info , setInfo] = useState();\n  const [time_stamp, setTimeStamp] = useState(\"Date\");\n  const [enter_post, setPost] = useState(\"Post goes here\");\n  const [likes_count,setLikesCount] = useState();\n  const [favorites_count,setFavoriteCount] = useState();\n  const [post_ic,setPostID] = useState();\n  const [user_firstname, setUserFirstname] = useState({user_firstname:u_firstname});\n  const [user_lastname, setUserLastname] = useState({user_lastname:u_lastname});\n  const [user_profile_image, setUserProfileImage] = useState({user_profile_image:u_profile_image});\n  const [user_id, setUserId] = useState({user_id:u_id});\n  const [postsDictionary, setPostDictionary] = useState({postsDictionary:{}});\n  const [postsFromFirebase, setPostsFromFirebase] = useState({postsFromFirebase:[]});\n  const postURI = uuid();\n\n  // Window\n  const width = useRef(window.innerWidth);\n  const height = useRef(window.innerHeight);\n  const is_login_active = useRef();\n\n  //main grid\n  const mainGradClassName = useRef(\"ui grid\");\n\n  // outer row\n  const outerRowClassName = useRef(\"row\");\n  const heightOfOuterRow = useRef(\"400px\"); // 400px I had to reduce it to accomodate \n  const paddingTopOfOuterRow = useRef(\"5%\");\n  \n  const header = useRef(\"ui center aligned icon header\")\n  const inputHint = useRef(\"sticky note outline\")\n  // const columnTwoMaxHeight=useRef(\"200px\")\n  const [columnTwoMaxHeight, setColumnTwoMaxHeight] = useState(\"800px\")\n  const [numberOfColumns, setNumberOfColumns] = useState()\n  const [gravityWidthOfColumnOne, setGravityWidthOfColumnOne] = useState()\n\n  const segmentOneHeight = useRef(\"80%\")\n  const [gravityWidthOfColumnTwo, setGravityWidthOfColumnTwo] = useState()\n\n  const [buttonSize,setButtonSize] = useState();\n  const [sizeButtonForDesktop, setButtonSizeForDesktop] = useState(\"big\")\n  const [sendButtonMarginTop, setSendButtonMarginTop] = useState(\"15px\")\n  const [display_desktop_button, setDsplayDesktopButton] = useState();\n  const [display_mobile_button, setDisplayMobileButton] = useState();\n\n  const [activeItemInTextMenu, setactiveItemInTextMenu] = useState(); \n\n  const [right_orner_star, setRightCornerStar] = useState();\n\n  const green = useRef(\"palegreen\");\n  const black = useRef(\"black\");\n\n  const [bold_color, setBoldColor] = useState();\n  const [italic_color, setItalicColor] = useState();\n  const [quotes_color, setQuotesColor] = useState();\n  const [link_color, setLinkColor] = useState();\n  const [user_color, setUserColor] = useState();\n  const [photo_color, setPhotoColor] = useState();\n\n  const [is_bold_active, setIsBoldActive] = useState(false);\n  const [is_italic_active, setIsItalicActive] = useState(false);\n  const [is_quotes_active, setIsQuotesActive] = useState(false);\n  const [is_link_active, setIsLinkActive] = useState(false);\n  const [is_user_active, setIsUserActive] = useState(false);\n  const [is_photo_active, setIsPhotoActive] = useState(false);\n\n  // textarea\n  const [text_area_height, setTextAreaHeight] = useState();\n  const [text_area_width, setTextAreaWidth] = useState();\n  const [text_area_radius, setTextAreaRadius] = useState();\n\n  // asterisk\n  const [asterisk_height, setAsteriskHeight] = useState();\n  const [asterisk_width, setAsteriskWidth] = useState();\n\n  const dodger_blue = useRef(\"#1E90FF\");\n  const rose_white = useRef(\"#FFFAFA\");\n  const white_dove = useRef(\"#F0EFE7\");\n\n  const handleItemInTextMenuClicks = (e, {name, value, active}) => {\n    // console.log(\"clicked: \"+name)\n    switch (name) {\n      case \"B\":\n        setBoldColor(dodger_blue.current);\n        console.log(\"clicked: \"+name);\n        setIsBoldActive(true)\n        console.log(\"is active? \"+value);\n        console.log(\"active var: \"+active);\n        break;\n      case \"I\":\n        setItalicColor(dodger_blue.current);\n        break;\n      case \"Q\":\n        setQuotesColor(dodger_blue.current);\n        break;\n      case \"L\":\n        setLinkColor(dodger_blue.current);\n        break;\n      case \"C\":\n        setUserColor(dodger_blue.current);\n        break;\n      case \"P\":\n        setPhotoColor(dodger_blue.current);\n        break;\n    }\n  }\n  \n  useEffect(() => {\n    // console.log(\"uuser_firstname\",u_firstname);\n    var window_width = width.current;\n    var window_height = height.current;\n    \n    if(window_width < (window_height+200)) {\n      setDisplayMobileButton(\"inline\");\n      setDsplayDesktopButton(\"none\");\n      setNumberOfColumns(1);\n      setGravityWidthOfColumnOne(6)\n      setGravityWidthOfColumnTwo(10)\n      setButtonSize(\"large\");\n      setTextAreaHeight(\"90%\");\n      setTextAreaWidth(\"100%\");\n      setTextAreaRadius(\"20px\");\n      // setAsteriskHeight(\"100%\");\n      // setAsteriskWidth(\"100%\");\n    } else {\n      // Pc Screen\n      setDisplayMobileButton(\"none\");\n      setDsplayDesktopButton(\"inline\");\n      setButtonSize(\"huge\");\n      setNumberOfColumns(2); //text area and displaying the posts\n      setGravityWidthOfColumnOne(6)\n      setGravityWidthOfColumnTwo(10)\n      setRightCornerStar(\"2.4%\");\n      setRightCornerStar(\"3.3%\");\n      setTextAreaHeight(\"90%\");\n      setTextAreaWidth(\"100%\");\n      setTextAreaRadius(\"20px\");\n      // setAsteriskHeight(\"100%\");\n      // setAsteriskWidth(\"100%\");\n    }\n\n    // Getting data from firebase\n    db.collection(\"posts\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          postsDictionary[doc.id] = doc.data()\n    })\n\n    setPostDictionary(postsDictionary)\n\n    /**Setting up the posts from Firebase meaning, whenever we \n     * that whenever we refresh the page or restart the app,\n     * the following code gets the post already in firebase for \n     * us to display them via pagination.\n     */\n    Object.keys(postsDictionary)\n      .forEach(async function (key, index) {\n        if(index != 0) {\n          // console.log(\"key: \",key,\" index: \",index)\n          /** Storing data gathered from firebase database to\n            local variables. */\n          let time_stamp = postsDictionary[key][\"time\"];\n          let enter_post = postsDictionary[key][\"post\"];\n          let post_id = postsDictionary[key][\"post_id\"];\n          let likes_count = postsDictionary[key][\"likes\"];\n          let favorites_count = postsDictionary[key][\"favorites\"];\n          let current_user_firstname = postsDictionary[key][\"firstname\"];\n          let current_user_lastname = postsDictionary[key][\"lastname\"];\n          let current_user_profile_image = postsDictionary[key][\"profile_image\"];\n          let current_user_id = postsDictionary[key][\"user_id\"];\n          \n          // Now pushing to object/component to be displayed.\n          postsFromFirebase[\"postsFromFirebase\"].push({\"time\":time_stamp,\n            \"post\":enter_post,\"post_id\":post_id,\n            \"likes\":likes_count,\"favorites\":favorites_count,\n            \"firstname\":\"current_user_firstname\",\n            \"lastname\":\"current_user_lastname\", \n            \"profile_image_uri\":\"current_user_profile_image\"\n          });\n\n          // setPostsFromFirebase(postsFromFirebase)\n          setTimeStamp(time_stamp);\n          setPost(enter_post);\n          setPostID(post_id);\n          setLikesCount(likes_count);\n          setFavoriteCount(favorites_count);\n          setUserFirstname(current_user_firstname);\n          setUserLastname(current_user_lastname);\n          setUserProfileImage(current_user_profile_image);\n          setUserId(current_user_id);\n          }\n        })\n      }).catch((error) => {\n    })\n    // Can't set the values here\n  },[postsFromFirebase])\n\n  const sendPost = (e) => {\n    e.preventDefault()\n    /**Send the new post in Firebase Database. */\n\n    console.log(\"clicked the send button\");\n    let post_text = inputRef.current.value;\n    let time = new Date().toLocaleDateString('en-us', { weekday:\"short\", year:\"numeric\", month:\"short\", day:\"numeric\"});\n    let post_id = postURI.slice(0,8);\n\n    // Set information to firebase databse\n    db.collection(\"posts\")\n      .doc(post_id)\n      .set({\n        post: post_text,\n        time: time,\n        likes: 0,\n        favorites: 0,\n        post_id: post_id,\n        firstname: u_firstname,\n        lastname: u_lastname,\n        profile_image: u_profile_image,\n        user_id: user_id,\n    })\n\n    setPost(post_text);\n    setTimeStamp(time);\n    setPostID(post_id);\n    setFavoriteCount(0);\n    setLikesCount(0);\n    setUserFirstname(user_firstname);\n    setUserLastname(user_lastname);\n    setUserId(user_id);\n    // setProfileImage\n\n\n    console.log(\"p\"+JSON.stringify(postsFromFirebase));\n\n    // Set the postwith new values -- prepare the post object before is sent to the firebase db.\n    postsFromFirebase[\"postsFromFirebase\"].push({\"time\": time, \"post\": post_text,\n      \"post_id\": post_id, likes: 0, favorites: 0, \"firstname\": user_firstname,\n      \"lastname\": user_lastname, \"user_id\": user_id});\n  }\n  \n  const handleChange = (e) => {\n    e.preventDefault()\n    console.log(\"post: \"+inputRef.current.value)\n  }\n\n  // Start the fetch operation as soon as\n  // the page loads\n  window.addEventListener('load', () => {\n    fetchData();\n  });\n\n  // Fetch the required data using the get() method\n  const fetchData = () => {\n    db.collection(\"posts\")\n      .get()\n      .then((querySnapshot) => {\n        // Loop through the data and store\n        // it in array to display\n        querySnapshot.forEach((doc) => {\n          var data = doc.data();\n          console.log(doc.id,\"=>\", data[\"post\"])\n        });\n    }).catch((error) => {\n      console.log(\"In FetchData: Error getting documents: \", error)\n    })\n  }\n\n  return (\n    <Grid \n      columns = {numberOfColumns} \n      reversed = \"mobile\"\n      stackable \n      >\n      <link \n        rel = \"stylesheet\" \n        href = \"/home/emmanuel/Desktop/ReactJSProjects/Diary/frontend/src/styles/notebookComponent.css\"/>\n      <Grid.Row\n        id = \"outerRow\"\n        style = {{paddingTop:paddingTopOfOuterRow.current, \n                  height:heightOfOuterRow.current}}\n        stretched \n        // divided\n        >\n        <Grid.Column width = {gravityWidthOfColumnOne}>\n          <Segment style = {{height:segmentOneHeight.current}}>\n            <div\n              id = \"notebook-element\">  \n              <h2 className = \"text-center mb-2\">\n                <h3 className = {header.current}>\n                  <i className = {inputHint.current}></i>\n                  Write what comes to mind!\n                </h3>\n              </h2>\n              {/* <Menu\n                position = \"center\"\n                incon = \"labeled\"\n                fluid \n                widths = {10}\n                secondary \n                // pointing\n                >\n                <Menu.Item\n                  className = \"item\"\n                  style = {{color:bold_color,backgroundColor:white_dove.current}}\n                  active = {activeItemInTextMenu === \"B\"}\n                  onClick = {handleItemInTextMenuClicks}\n                  name = \"B\"\n                  icon = \"bold\"\n                  // color = \"backgroundColor\"\n                  value = {is_bold_active}\n                  data-tooltip = \"Bold.\" \n                  data-position = \"top center\" >\n                    <Icon name = \"bold\" />\n                  </Menu.Item>\n                <Menu.Item\n                  active = {activeItemInTextMenu === \"I\"}\n                  onClick = {handleItemInTextMenuClicks}\n                  style = {{color:italic_color}}\n                  name = \"I\"\n                  value = {is_italic_active}\n                  activeItemInTextMenu = \"I\"\n                  icon = \"italic\"\n                  data-tooltip = \"Italic.\" \n                  data-position = \"top center\" >\n                    <Icon name = \"italic\" />\n                </Menu.Item>\n                <Menu.Item\n                  active = {activeItemInTextMenu === \"Q\"}\n                  onClick = {handleItemInTextMenuClicks}\n                  style = {{color:quotes_color}}\n                  name = \"Q\"\n                  value = {is_quotes_active}\n                  activeItemInTextMenu = \"Q\"\n                  icon = \"quote right\"\n                  data-tooltip = \"Add quote.\" \n                  data-position = \"top center\" >\n                    <Icon name = \"quote right\" />\n                </Menu.Item>\n                <Menu.Item\n                  active = {activeItemInTextMenu === \"L\"}\n                  onClick = {handleItemInTextMenuClicks}\n                  style = {{color:link_color}}\n                  name = \"L\"\n                  value = {is_link_active}\n                  activeItemInTextMenu = \"L\"\n                  icon = \"linkify right\"\n                  data-tooltip = \"Add a Link.\" \n                  data-position = \"top center\" >\n                    <Icon name = \"linkify right\" />\n                </Menu.Item>\n                <Menu.Item \n                  active = {activeItemInTextMenu === \"C\"}\n                  onClick = {handleItemInTextMenuClicks}\n                  style = {{color:user_color}}\n                  name = \"C\"\n                  value = {is_user_active}\n                  activeItemInTextMenu = \"C\"\n                  icon = \"users right\"\n                  data-tooltip = \"Mentions Someone.\" \n                  data-position = \"top center\" >\n                    <Icon name = \"users right\" />\n                </Menu.Item>\n                <Menu.Item\n                  active = {activeItemInTextMenu === \"P\"}\n                  onClick = {handleItemInTextMenuClicks}\n                  style = {{color:photo_color}}\n                  name = \"P\"\n                  value = {is_photo_active}\n                  activeItemInTextMenu = \"P\"\n                  icon = \"image right\"\n                  data-tooltip = \"Add an Image.\" \n                  data-position = \"top center\" >\n                    <Icon name = \"image right\" />\n                </Menu.Item>\n              </Menu> */}\n              <Grid>\n                <Grid.Row \n                  columns = {2}>\n                  <Grid.Column \n                    width = {13}> {/**for full 18 */}\n                        <textarea\n                          rows = \"10\"\n                          id = \"input-element\"\n                          className = \"ui segment\"\n                          type = \"text\"\n                          size = \"big\"\n                          ref = {inputRef}\n                          name = \"message\"\n                          style = {{height:text_area_height, width:text_area_width, \n                                    borderTopLeftRadius:text_area_radius,\n                                    borderTopRightRadius:text_area_radius,\n                                    borderBottomLeftRadius:text_area_radius,\n                                    borderBottomRightRadius:text_area_radius\n                                  }}\n                          onChange = {handleChange}\n                          placeholder = 'Type anything...'>\n                        </textarea> {/**Text area */}\n                    {/* </div> *Text area + Star */}\n                  </Grid.Column>\n                  <Grid.Column \n                    width = {3}\n                    style = {{paddingLeft:\"0px\"}}>\n                    <div \n                      id = \"mobile-button\" >\n                      <Button \n                        className = \"ui circular plus icon purple button\"\n                        type = \"submit\"\n                        value = {time_stamp}\n                        onClick = {sendPost}\n                        style = {{color:rose_white, //dodger-blue: #1E90FF, ivory:#FFFFF0 ....a28089\n                                  width:\"fit-content\", \n                                  height:\"fit-content\", \n                                  marginLeft:\"0%\", \n                                  marginTop:\"100%\",\n                                  display:display_mobile_button}}\n                        data-tooltip = \"Press to send note to save on database.\" \n                        data-position = \"top center\"\n                        > <i className = {buttonSize+\" plus icon\"}></i>\n                      </Button>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </div>{/**\"notebook-element\"*/}\n          </Segment>\n          <div id = \"desktop_button\">\n            <Button \n              className = \"ui circular plus icon red button\"\n              type = \"submit\"\n              value = {time_stamp}\n              onClick = {sendPost}\n              style = {{color:\"white\",\n                      width:\"fit-content\", \n                      height:\"fir-content\", \n                      marginLeft:\"0%\",\n                      display:display_desktop_button}}\n              data-tooltip = \"Press to send note to save on database.\" \n              data-position = \"top center\"\n              ><i className = {buttonSize+\" plus icon\"}></i>\n            </Button>\n          </div>\n        </Grid.Column>\n        <Grid.Column \n          width = {gravityWidthOfColumnTwo} \n          style = {{height:\"100%\",\n                  overflow:'scroll', \n                  maxHeight:columnTwoMaxHeight}}>\n          <Segment style = {{backgroundColor:\"#F3FDFE\"}}>\n              {postsFromFirebase[\"postsFromFirebase\"]\n              .map(entry => {if(entry.post != null && entry.time != null)\n              return (\n                <div style = {{marginTop:\"15px\"}}>\n                  <LoadPosts \n                    post = {entry.post} \n                    time = {entry.time}\n                    post_id = {entry.post_id}\n                    likes = {entry.likes}\n                    favorites = {entry.favorites}\n                    firstname = {entry.firstname}\n                    lastname = {entry.lastname}\n                    profile_image = {entry.profile_image}/>\n                </div>)}\n            )}\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default Note","import React, { useRef, useState, useEffect } from \"react\"\nimport {useAuth,logout} from \"../contexts/AuthContext\"\nimport realtimeDB from '../firebase/realtimeDatabase'\nimport { Link, useNavigate } from \"react-router-dom\"\nimport {Form, Button, Card, Grid, Select, Input, Icon, Header, Image, Segment} from \"semantic-ui-react\"\nimport db from \"../firebase/firestore\"\nimport ContentLoader, { Facebook } from 'react-content-loader'\nimport ReactImagePickerEditor, { ImagePickerConf } from 'react-image-picker-editor';\nimport 'react-image-picker-editor/dist/index.css'\nimport MainPage from \"./MainPage\"\n// import MagicBell, { FloatingNotificationInbox } from '@magicbell/magicbell-react';\n\n// https://www.npmjs.com/package/@magicbell/magicbell-react\n// https://medium.com/@musturi.rakesh/notification-component-in-react-javascript-b9c574b2c494\n// https://hackernoon.com/how-to-add-notifications-to-your-react-navigation-bar\n// import \"../styles/imagePicker.css\"\n\n// https://codesandbox.io/s/image-picker-form-image-box-srt0q?file=/src/index.js:0-1411\n// https://codepen.io/mrMetalWood/pen/XjXrrV\nfunction UpdateProfile() {\n  \n  // Firebase stuff. \n  const { currentUser, updatePassword, updateEmail } = useAuth();\n  const [ error, setError ] = useState(\"\");\n  const [ loading, setLoading ] = useState(false);\n  const navigate = useNavigate();\n\n  // New values\n  const [newFirstname, setNewFirstname] = useState();\n  const [newLastname, setNewLastname] = useState();\n  const [newEmail, setNewEmail] = useState();\n  const [newPassword, setNewPassword] = useState();\n  const [confirmNewPassword, setConfirmNewPassword] = useState();\n  const [newProfileImageURL, setNewProfileImageURI] = useState();\n\n  // Old Values\n  const [oldFirstname, setOldFirstname] = useState();\n  const [oldLastname, setOldLastname] = useState();\n  const [oldEmail, setOldEmail] = useState();\n  const [oldPassword, setOldPassWord] = useState();\n  const [oldProfileImageURL, setOldProfileImageURL] = useState();\n  const old_profile_image_uri = useRef();\n\n  // Collect user's data\n  const [ usersData, setUsersData] = useState([]);\n  const [ dataIdToBeUpdated, setDataIdToBeUpdated ] = useState(\"\");\n\n  // Window\n  const window_width_ref = useRef(window.innerWidth);\n  const window_heigth_ref = useRef(window.innerHeight);\n\n  // Adjusting the form's size.\n  const adjust_horizontal_position = useRef(\"10%\");\n  const adjust_vertical_postion = useRef(\"0%\");\n  const [form_width, setFormWidth] = useState();\n  const [form_height, setFormHeight] = useState();\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (newPassword.current.value !== confirmNewPassword.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const promises = []\n    setLoading(true)\n    setError(\"\")\n\n    if (newEmail.current.value !== currentUser.email) {\n      promises.push(updateEmail(newEmail.current.value))\n    }\n    if (newPassword.current.value) {\n      promises.push(updatePassword(newPassword.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        navigate(\"/login\")\n      })\n      .catch(() => {\n        setError(\"Failed to update account\")\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n    \n  }\n\n  const handleChange =(e)=>{\n    e.preventDefault()\n    let me = \"me\";\n    switch (e.target.name) {\n\n      case \"firstname\":\n        // console.log(\"firstname: \"+e.target.value)\n        console.log(\"firstname: \"+e.target.value)\n        break;\n\n      case \"lastname\":\n        // setNewLastname(e.target.value)\n        console.log(\"lastname: \"+e.target.value)\n        break\n\n      case \"email\":\n        // setNewEmail(e.target.value)\n        console.log(\"email: \"+e.target.value)\n        break\n\n      case \"new_password\":\n        // setNewPassword(e.target.value)\n        console.log(\"new_password: \"+e.target.value)\n        break\n\n      case \"confirm_new_password\":\n        // setConfirmNewPassword(e.target.value)\n        console.log(\"confirm_new_password: \"+e.target.value)\n        break\n\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    let width = window_width_ref.current;\n    let height = window_heigth_ref.current;\n    let width_for_form = 0;\n    let height_for_form = 0;//no-initial-user-image\n    console.log(\"old_image: \"+old_profile_image_uri.current);\n    console.log(\"width: \"+width+\" height: \"+height);\n    if (height > (width+100)) {\n      // Mobile\n      width_for_form = width * (400/width);\n      height_for_form = 800;\n      setFormWidth(width_for_form+\"px\");\n      setFormHeight(height_for_form+\"px\");\n    } else {\n      // Desktop\n      width_for_form = width * (600/width);\n      height_for_form = 800;\n      setFormWidth(width_for_form+\"px\");\n      setFormHeight(height_for_form+\"px\");\n    }\n    realtimeDB.ref(currentUser.uid)\n    .get()\n    .then((snapshot) => {\n      if(snapshot.exists()) {\n        let old_firstname = snapshot.val().firstName\n        let old_lastname = snapshot.val().lastName\n        let old_email = snapshot.val().email\n        let old_password = snapshot.val().password\n        let old_profile_image_uri = snapshot.val().profileImage\n        setOldFirstname(old_firstname)\n        setOldLastname(old_lastname)\n        setOldEmail(old_email)\n        setOldPassWord(old_password)\n        setOldProfileImageURL(old_profile_image_uri)\n        usersData.push(old_firstname)\n        usersData.push(old_lastname)\n        usersData.push(old_email)\n        usersData.push(old_password)\n        usersData.push(old_profile_image_uri)\n      } else {\n        console.log(\"No data vailable\")\n      }\n    }).catch((error) => {\n      console.error(error)\n    })\n  }, []);\n\n  const handleOnPreviewClick = (e) => {\n    e.preventDefault()\n    // console.log(\"clicked\");\n  }\n\n  return (\n    <Grid\n      className = \"ui container center aligned\"\n      textAlign = \"center\"\n      verticalAlign = 'middle'\n      style = {{borderColor: \"red\", \n      transform: \"translate(\"+adjust_vertical_postion.current+\",\"+adjust_horizontal_position.current+\")\"}}\n    >\n      <Grid.Row >\n        <Grid.Column \n          width = {6} \n          style = {{minWidth:form_width, maxHeight:form_height}}>\n          <Card style = {{width:\"100%\"}}>\n            <Form onSubmit = {handleSubmit}>\n              <Header className=\"text-center mb-4\">Update Profile</Header>\n              {/* TODO: Add Image picker option so that the user can have a user image. */}\n              {/* <Image \n                // className = \"ui circular big centered image\"\n                class = \"ui avatar image\"\n                src = {oldProfileImageURL}\n                onClick = {handleOnPreviewClick}\n                style = {{backgroundColor:\"black\", height:\"100px\",width:\"100px\"}}\n                size = \"big\"\n                avatar\n                centered /> */}\n              <Form.Field id = \"first-name\">\n                <Form.Input \n                  name = \"firstname\"\n                  label = \"firstname\"\n                  type = \"text\"\n                  id = \"user-first-name\"\n                  icon = \"user\"\n                  placeholder = \"Enter Firstname\"\n                  onChange = {handleChange} \n                  ref = {newFirstname} \n                  required \n                ></Form.Input>\n              </Form.Field>\n              <Form.Field id=\"last-name\">\n                <Form.Input\n                  name = \"lastname\" \n                  label = \"Lastname\"\n                  type = \"text\" \n                  ref = {newLastname}\n                  icon = \"user\"\n                  id = \"user-first-name\"\n                  placeholder = \"Last Name\"\n                  onChange = {handleChange} \n                  required\n                ></Form.Input>\n              </Form.Field>\n              <Form.Field id = \"email\">\n                <Form.Input \n                  name = \"email\"\n                  label = \"Email\"\n                  type = \"email\"\n                  icon = \"envelope\"\n                  ref = {newEmail} \n                  defaultValue = {currentUser.email}\n                  onChange = {handleChange} \n                  required \n                ></Form.Input>\n              </Form.Field>\n              <Form.Field id = \"password\">\n                <Form.Input\n                  name = \"new_password\"\n                  label = \"Passord\"\n                  placeholder = \"Leave blank to keep the same\" \n                  type = \"password\"\n                  icon = \"lock\"\n                  ref = {newPassword}\n                  defaultValue = {currentUser.password}\n                  onChange = {handleChange} \n                  required\n                ></Form.Input>\n              </Form.Field>\n              <Form.Field id = \"password-confirm\">\n                <Form.Input\n                  name = \"confirm_new_Password\" \n                  label = \"Password\"\n                  placeholder = \"Confirm the new password\" \n                  type = \"password\"\n                  icon = \"lock\"\n                  ref = {confirmNewPassword} \n                  onChange = {handleChange} \n                  required\n                ></Form.Input>\n              </Form.Field>\n              <Button \n                disabled = {loading}\n                className = \"w-100\" \n                type = \"submit\"\n                color = \"blue\"\n              >\n                Update\n              </Button>\n            </Form>\n            <div className = \"w-100 text-center mt-2\">\n              <Link to = \"/mainpage\">Cancel</Link>\n            </div>\n          </Card>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default UpdateProfile","import React, {useState,useEffect,useRef} from 'react'\nimport {useAuth, logout} from \"../contexts/AuthContext\"\nimport {Link, useNavigate} from \"react-router-dom\"\nimport {Card,Icon,Image,Button,Grid,Segment} from \"semantic-ui-react\"\nimport realtimeDB from '../firebase/realtimeDatabase';\nimport UpdateProfile from \"./UpdateProfile\"\n\nfunction Dashboard() {\n\n  const [firstname,setFirstname] = useState()\n  const [lastname,setLastname] = useState()\n  const [password,setPassword] = useState()\n  const [profileImage,setProfileImage] = useState()\n  const [email,setEmail] = useState()\n  const [error,setError]=useState(\"\")\n  const [dataFromRealTimeDatabase,setDataFromRealTimeDatabase] = useState({dataFromRealTimeDatabase:[]}) \n  const {currentUser, logout} = useAuth()\n  const [currentUserUID,] = useState(currentUser.uid)\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    realtimeDB.ref(currentUserUID)\n    .get()\n    .then((snapshot) => {\n      if(snapshot.exists()) {\n        let firstname = snapshot.val().firstName\n        let lastname = snapshot.val().lastName\n        let password = snapshot.val().password\n        let profileImage = snapshot.val().profileImage\n        let email = snapshot.val().email\n        setFirstname(firstname)\n        setLastname(lastname)\n        setPassword(password)\n        setProfileImage(profileImage)\n        setEmail(email)\n      } else {\n        console.log(\"No data available\")\n      }\n    }).catch((error) => {\n      console.error(error)\n    })\n  })\n\n  async function handleLogOut () {\n    setError(\"\")\n    setLoading(true)\n    try{\n      navigate(\"/update-profile\")\n    } catch {\n      setError(\"failed to log oumint\")\n    }\n    setLoading(false)\n  }\n\n  return (\n    <div id=\"dashboard\" style={{height:\"800px\",paddingTop:\"5%\"}}>\n      <center>\n        <Card color=\"blue\" style={{width:\"firContent\",height:\"fitContent\"}}>\n          <Image \n            className = \"ui circular big centered image\"\n            floated = \"center\"\n            size = \"big\"\n            src = {profileImage}\n            wrapped ui = {false}/>\n          <Card.Content>\n            <Grid.Column>\n              <Grid.Row style = {{display:\"block\"}}><strong>Firstname: </strong> {firstname}</Grid.Row> \n              <Grid.Row style = {{display:\"block\"}}><strong>Lastname: </strong> {lastname}</Grid.Row>\n              <Grid.Row style = {{display:\"block\"}}><strong>Email: </strong> {email}</Grid.Row> \n              <Grid.Row style = {{display:\"block\"}}><strong>Password: </strong> {password}</Grid.Row>\n            </Grid.Column>\n          </Card.Content>\n          <Card.Content extra>\n            <Button \n              variant = \"link\" \n              className = \"ui blue button\"\n              onClick = {handleLogOut}\n              data-tooltip = \"Update to database.\" \n              data-position = \"top center\"\n              style = {{width:\"fitContent\"}}\n              color = \"blue\"\n              >\n                Update Profile\n              </Button>\n          </Card.Content>\n        </Card>\n      </center>\n    </div>\n  )\n}\n\nexport default Dashboard","import React, {useState, prevState, useEffect, useRef} from \"react\"\nimport {Card, Icon, Image, Button, Grid, Segment, Divider, Transition, Menu} from \"semantic-ui-react\"\n\nfunction NotificationsPage () {\n    return (\n        <div id = \"notifications_page_container\">\n            <h1>NotificationsPage</h1>\n        </div>\n    )\n}\n\nexport default NotificationsPage;","// import from react\nimport React, {useRef, useState, useEffect} from \"react\"\nimport {useNavigate, Link} from \"react-router-dom\"\n\n// import for database\nimport ref from \"../firebase/Storage\"\nimport realtimeDB from '../firebase/realtimeDatabase';\nimport {firestore, collection, query, where, getDock} from \"../firebase/firestore\"\nimport db from \"../firebase/firestore\"\nimport {useAuth, logout, signOut} from \"../contexts/AuthContext\"\n\n// import for this component\nimport Note from \"./Note\"\nimport Dashboard from \"./Dashboard\"\nimport LogIn from \"./LogIn\"\nimport UpdateProfile from \"./UpdateProfile\"\nimport NotificationsPage from \"./NotificationsPage\"\n\nfunction LoadPage ({page, firstname, lastname, profile_image, id_of_current_user}) {\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n    const {logout} = useAuth();\n\n    useEffect(() => {\n        // console.log(page,firstname,lastname,profile_image,id_of_current_user);\n    })\n\n    async function logginout () {\n\n        setError(\"\")\n    \n        try{\n          setError(\"\")\n          setLoading(true)\n          navigate(\"/login\")\n          await logout()\n        } catch {\n          setError(\"failed to log out\")\n        }\n      }\n    \n    switch (page) {\n        case \"home\":\n            return (\n                <NotificationsPage />\n            )\n            break;\n        case \"settings\":\n            return (\n                <UpdateProfile />\n            )\n        case \"logout\":\n            return (\n                <div>\n                    <h1>\n                        {logginout()}\n                    </h1>\n                </div>\n                // {logout()}\n            )\n    \n        default:\n            return (\n                <Note \n                    u_firstname = {firstname}\n                    u_lastname = {lastname}\n                    u_profile_image = {profile_image}\n                    u_id = {id_of_current_user}/>\n                // <Note />\n            )\n            break;\n    }\n}\n\nexport default LoadPage","import React from \"react\"\nfunction New() {\n    return(\n        <div>\n            <h1>New</h1>\n        </div>\n    )\n}\n\nexport default New","import React, {useState, prevState, useEffect, useRef} from \"react\"\nimport {Card, Icon, Image, Button, Grid, Segment, Divider, Transition, Menu} from \"semantic-ui-react\"\nimport {Link} from \"react-router-dom\"\n\nfunction Images () {\n    return (\n        <div id = \"image_id\">\n            <h1>Images.</h1>\n        </div>\n    )\n}\n\nexport default Images;","// React dependencies imports.\nimport React,{useRef,useState,useEffect} from 'react'\nimport { Card, Grid, Icon, Menu } from 'semantic-ui-react'\nimport { useNavigate, Link } from \"react-router-dom\"\n\n// import for database.\nimport ref from \"../firebase/Storage\"\nimport realtimeDB from '../firebase/realtimeDatabase';\nimport {firestore, collection, query, where, getDock} from \"../firebase/firestore\"\nimport db from \"../firebase/firestore\"\nimport {useAuth, logout, signOut} from \"../contexts/AuthContext\"\n\n// Friendly components imports.\nimport Footer from \"./Footer\"\nimport LoadPage from \"./LoadPage\"\nimport Navigation from \"./Navigation\"\n\n// Css imports.\nimport \"/home/emmanuel/Desktop/ReactJSProjects/Diary/frontend/src/styles/mainPage.css\"\n\n\nfunction MainPage() {\n\n    const made_up_user_id = useRef(null);\n    const windowWidth = useRef(window.innerWidth)\n    const windowHeight = useRef(window.innerHeight)\n    const [active_item, setActiveItem] = React.useState();\n    const [inconsSize,setIconsSize] = useState(\"big\")\n    \n    // \n    const {currentUser, updatePassword, updateEmail, logout} = useAuth();\n\n    // \n    const [f_name, setFirstname] = useState();\n    const [l_name, setLastname] = useState();\n    const [p_image, setProfileImage] = useState();\n    const [t_current_user_id, setTemporaryCurrentUserId] = useState({t_current_user_id:\"some_user\"});\n    const [user_information_query, setUserInformationQuery] = useState({user_information_query:{}});\n    const [fake_id, setFakeId] = useState({fake_id:\"\"});\n    const id_ref = useRef();\n\n    const handleOnClick = (e, {value}) => setActiveItem(value)\n    \n    useEffect(() => {\n        if (windowHeight.current > windowWidth.current) {\n            setIconsSize(\"larger\");\n        }\n\n        console.log(\"message\",setRealUserIdToUser());\n\n        setFirstname(\"emmanuel\");\n        setLastname(\"agyapong\");\n        setProfileImage(\"None yet\");\n        setTemporaryCurrentUserId(\"000000\");\n        console.log(\"id:\",t_current_user_id);\n        \n    },1);\n\n    const setRealUserIdToUser = () => {\n        db.collection(\"users\") \n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    user_information_query[doc.id] = doc.data()\n                    // for (const[key, value] of Object.entries(user_information_query[doc.id])) {\n                    //     if (value == currentUser.email) {\n                    //         db.collection(\"users\").doc(doc.id).add(\"real_id\":currentUser.uid)\n                    //     }\n                    // }\n                })\n        })\n\n        setUserInformationQuery(user_information_query);\n        \n        console.log(\"user_information_query\",user_information_query)\n        \n        // setUserInformationQuery(user_information_query);\n        // for (const[key, value] of Object.entries(user_information_query)) {\n        //     console.log(\"key:\",key)\n        // }\n\n        \n    }\n\n    const foo = (id) => {\n        // console.log(\"outside:\",id);\n        // setFakeId(id);\n        setTemporaryCurrentUserId(id)\n        console.log(\"fake_id:\",t_current_user_id);\n    }\n\n    return (\n        <div id = \"mainPageContainer\">\n            <div id = \"body\">\n                {/* <Navigation /> */}\n                <div id = \"subContainer\">\n                    <LoadPage \n                        page = {active_item}\n                        firstname = {f_name}\n                        lastname = {l_name}\n                        profile_image = {p_image} \n                        id_of_current_user = {currentUser.uid} />\n                </div>\n            </div>\n            {/* TODO: here is where you can fix the footer. */}\n            <Footer/>\n        </div>\n    )\n}\n\nexport default MainPage","import React, {useRef,useState,useEffect} from 'react'\nimport RegisterForm from \"./RegisterForm\"\nimport { Form, Input, TextArea, Button, Select, Card, Grid, Icon } from 'semantic-ui-react'\nimport {useAuth} from \"../contexts/AuthContext\"\nimport SignUp from \"./SignUp\"\nimport ForgotPassword from \"./ForgotPassword\"\nimport {Link, useNavigate} from \"react-router-dom\"\nimport MainPage from \"./MainPage\"\n\nfunction LogIn() {\n\n  /**TODO: Add onFocus and onBlur in the input component;\n   * so that you could use their attributes to make the \n   * app better.\n   */\n\n  const [emailRef, setEmailRef] = React.useState(\"\");\n  const [passwordRef, setPasswordRef] = React.useState(\"\");\n  const {login} = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // const device=useRef(\"ui container center aligned\")\n  const headerString = useRef(\"ui dividing header text-center mb-4\")\n  // const formWidth=useRef()\n  // const formHeight=useRef()\n  // console.log(window.innerWidth,window.innerHeight)\n  const [formWidth, setFormWidth] = useState()\n  const [formHeight, setFormHeight] = useState()\n  const [screenSize, setScreenSize] = useState()\n  // const is_component_active = true;\n\n  const adjust_horizontal_position = useRef(\"+50%\");\n  const adjust_vertical_postion = useRef(\"0%\");\n  const l = useRef(\"myLocation\");\n\n  useEffect(() => {\n\n    // console.log(\"my_location.current: \"+my_location.current);\n    let width_original_lenght = window.innerWidth\n    let height_original_lenght = window.innerHeight\n    // console.log(\"width: \"+width_original_lenght,\" height: \"+height_original_lenght)\n\n    if(height_original_lenght > (width_original_lenght + 100)) {\n      let width_length_to_set = width_original_lenght * (400/width_original_lenght)\n      let height_length_to_set = height_original_lenght * (400/height_original_lenght)\n      // console.log(\"width_length_to_set: \"+width_length_to_set+\" height_length_to_set: \"+height_length_to_set);\n      setFormWidth(width_length_to_set+\"px\")\n      setFormHeight(height_length_to_set+\"px\")\n    } else {\n      let width_length_to_set = width_original_lenght * (600/width_original_lenght)\n      let height_length_to_set = height_original_lenght * (400/height_original_lenght)\n      // console.log(\"width_length_to_set: \"+width_length_to_set+\" height_length_to_set: \"+height_length_to_set);\n      setFormWidth(width_length_to_set+\"px\")\n      setFormHeight(height_length_to_set+\"px\")\n    }\n  }, [])\n\n  async function handleSubmit (e) {\n    // Preventing the form to be submitted before the\n    // following code is successful, becuase we\n    // only submit the form only after the \n    // data has been loaded to the database.\n    e.preventDefault()\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef, passwordRef);\n      navigate(\"/mainpage\");\n    } catch {\n      setError(\"Failed to log in\");\n    }\n\n    setLoading(false)\n  }\n\n  const handleChangeEmail = (e) => {\n    e.preventDefault()\n    setEmailRef(e.target.value)\n    // console.log(\"emailIs\",e.target.value, \"\")\n  }\n\n  const handleChangePassword = (e) => {\n    e.preventDefault()\n    setPasswordRef(e.target.value)\n    console.log(\"passswordlIs\", e.target.value)\n  }\n\n  return (\n    <div id = \"loginId\">\n      <Grid \n        style = {{borderColor: \"red\", transform: \"translate(\"+adjust_vertical_postion.current+\",\"+adjust_horizontal_position.current+\")\"}}\n        className= {screenSize}\n        textAlign = \"center\"\n        verticalAlign = 'middle'\n        >\n        <Grid.Row centered>\n          <Grid.Column width = {6} style = {{minWidth:formWidth,maxHeight:formHeight}}>\n            <Card style = {{width:\"100%\"}}>\n              <div>\n                <Form \n                  size = \"big\"\n                  key = \"big\"\n                  onSubmit = {handleSubmit}>\n                  <h2 className = {headerString.current}> Log In</h2>\n                  <Form.Group>\n                    <Form.Field width = {16}>\n                      <Form.Input\n                        label = \"Email\"\n                        icon = \"envelope\"\n                        type = \"email\"\n                        placeholder = \"Enter Email...\"\n                        value = {emailRef}\n                        onChange = {handleChangeEmail}\n                        required\n                        >\n                      </Form.Input>\n                    </Form.Field>\n                  </Form.Group>\n                  <Form.Field>\n                    <Form.Input \n                      label = \"password\"\n                      // iconPosition = \"right\"\n                      icon = \"lock\"\n                      type = \"password\"\n                      placeholder = \"Ennter Password...\"\n                      value = {passwordRef}\n                      onChange = {handleChangePassword}\n                      required>\n                    </Form.Input>\n                  </Form.Field>\n                    <Button\n                      className = \"w-100\"\n                      color = \"primary\"\n                      disabled = {loading}\n                      icon = \"login\"\n                      size = \"big\"\n                      type = \"submit\">Login</Button>\n                    <div className = \"w-100 text-center mt-2\">\n                      <Link to = \"/forgot-password\" element = {<ForgotPassword/>}>\n                        Forgot Password?\n                      </Link>\n                    </div>\n                </Form>\n              </div>\n            </Card>\n            <div className = \"w-100 text-center mt-2\">\n            Need an account? <Link to = \"/signup\" element = {<SignUp l = {l.current}/>}>Sign Up</Link>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  )\n}\n\nexport default LogIn","import React,{useRef,useState,useEffect} from 'react'\nimport RegisterForm from \"./RegisterForm\"\nimport {useAuth} from \"../contexts/AuthContext\"\nimport {Link, useNavigate} from \"react-router-dom\"\nimport {Form, Input, TextArea, Button, Select, Card, Grid, Icon, Divider, Transaction} from 'semantic-ui-react'\nimport {Placeholder} from 'semantic-ui-react'\nimport app from \"../contexts/AuthContext\"\n// import firestore from \"../firebase/firestore\"\nimport {firestore, collection, query, where, getDock} from \"../firebase/firestore\"\nimport db from \"../firebase/firestore\"\nimport ref from \"../firebase/Storage\"\nimport realtimeDB from '../firebase/realtimeDatabase'\nimport LogIn from \"../components/LogIn\"\n// import defaultExport, {User} from \"../models/User\"\nimport {v4 as uuid} from 'uuid';\n\nfunction SignUp({l}) {\n\n  /**TODO: \n   * I created a new user_id because from the time sestUserId() to the time\n   * loadUser...... method  the user is not made yet, at least not \n   * the id. Fix it.*/\n  \n  // const vIs = useRef(l);\n  // const [loc, setLoc]=useState(\"l\");\n\n  const [firstname, setFirstname] = useState()\n  const [lastname, setLastname] = useState()\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState()\n  const [confirm_password, setConfirmPassword] = useState()\n  const {current_user, signup, logout, setUserId} = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const navigate = useNavigate();\n\n  /**Need to setup the values for the size of the form */\n  const [form_width, setFormWidth] = useState()\n  const [form_heigth, setFormHeight] = useState()\n\n  const adjust_horizontal_position = useRef(\"10%\");\n  const adjust_vertical_postion = useRef(\"0%\");\n\n  // const [fake_user_id, setFakeUserId] = useState();\n  const user_uri = uuid();\n\n  useEffect(() => {\n    // setLoc(\"M\")\n    // console.log(\"vIs: \"+vIs.current,\" loc: \"+loc);\n    let width_original_lenght = window.innerWidth;\n    let height_original_lenght = window.innerHeight;\n    \n    if(height_original_lenght > (width_original_lenght + 100)) {\n      let width_length_to_set = width_original_lenght * (400/width_original_lenght)\n      let height_length_to_set = 800;\n      setFormWidth(width_length_to_set+\"px\")\n      setFormHeight(height_length_to_set+\"px\")\n    } else {\n      let width_length_to_set = width_original_lenght * (600/width_original_lenght)\n      let height_length_to_set = 800;\n      setFormWidth(width_length_to_set+\"px\")\n      setFormHeight(height_length_to_set+\"px\")\n    }\n  })\n  \n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    // Validating and checking\n    if (password !== confirm_password) {\n      return setError(\"Password do not match\")\n    }\n\n    let firstname_of_current_user = firstname;\n    let lastname_of_current_user = lastname;\n    let email_of_current_user = email;\n    let password_of_current_user = password;\n    let current_user_id_uri = user_uri.slice(0, 8);//current_user.uid \n    let time = new Date().toLocaleDateString('en-us', { weekday:\"short\", year:\"numeric\", month:\"short\", day:\"numeric\"})\n\n    // setFakeUserId(current_user_id_uri);\n\n    loadUserInformationToFirebaseDatabase(firstname_of_current_user,\n      lastname_of_current_user, email_of_current_user, password_of_current_user,\n      current_user_id_uri);\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      // Create user in authetication first so we have it created with the uid\n      let promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          signup(email, password);\n          setUserId();\n          loadNotificationToRealtimeDB(firstname_of_current_user,\n            lastname_of_current_user, email_of_current_user, password_of_current_user,\n            current_user_id_uri, time);\n          console.log(\"Success!\");\n          resolve(\"Success!\");\n        }, 1000);\n      })\n\n      // Adding user to realtime db by id current_user.uid\n      promise.then(result=>(\n        logout(),\n        navigate(\"/\")\n      )).catch((err) => logout())\n    } catch {\n      setError(\"Failed to create an account\")\n    }\n    setLoading(false)\n  }\n\n  const loadNotificationToRealtimeDB = (user_firstname,\n    user_lastname,user_elmail,user_password,user_id,notification_time) => {\n    /**Loading information to realtime database for notifications. */\n    realtimeDB.ref(user_id).set({\n      firstname: user_firstname,//firstname,\n      lastname: user_lastname,//lastname\n      email: user_elmail,//email\n      password: user_password,//password\n      temporary_user_id: user_id,//---\n      real_user_id: \"working-on-it\",\n      profile_image_uri: \"https://firebasestorage.googleapis.com/v0/b/thejournal-d14eb.appspot.com/o/storage_of_me%2Fprofile_images%2F1e87a7f1-aced-4dce-a853-fb163ef52b24.jpg?alt=media&token=0bdb1342-01a9-467e-964b-2007ab2dccbc\",\n      time: notification_time,\n    }).catch(alert)\n  }\n\n  // const userConverter = {\n  //   toFirestore: (user)=> {\n  //       return {\n  //           firstname:user.firstname,\n  //           lastname: user.lastname,\n  //           email: user.emal,\n  //           temporary_user_id: user.temporary_user_id,\n  //           permanent_user_id: user.permanent_user_id,\n  //           profile_image_uri: user.profile_image_uri\n  //       };\n  //   },\n  //   fromFirestore: (snapshot, options) => {\n  //       const data = snapshot.data(options);\n  //       return new User(data.firstname, data.lastname, data.email, data.temporary_user_id, data.permanent_user_id, data.profile_image_uri);\n  //   }\n  // };\n\n\n  const loadUserInformationToFirebaseDatabase = (user_firstname,user_lastname,user_elmail,user_password,user_id) => {\n    /**Creating the user in FirebaseDB. */\n\n    db.collection(\"users\")\n      .doc(firstname)//\n      .set({\n        firstname: user_firstname,//firstname_of_current_user,\n        lastname: user_lastname,//lastname_of_current_user,\n        email: user_elmail,//email_of_current_user,\n        password: user_password,//password_of_current_user,\n        temporary_user_id: user_id,//current_user_id_uri,\n        profile_image: \"https://firebasestorage.googleapis.com/v0/b/thejournal-d14eb.appspot.com/o/storage_of_me%2Fprofile_images%2F1e87a7f1-aced-4dce-a853-fb163ef52b24.jpg?alt=media&token=0bdb1342-01a9-467e-964b-2007ab2dccbc\",\n        message:user_firstname+\" welcome to Notebook ^,^!\"\n    })\n    // const ref = doc(db, \"firstname\", \"lastname\").withConverter(cityConverter);\n    // await setDoc(ref, new User(user_firstname,user_lastname,user_elmail,user_password,user_id,\"\",profile_image))\n  }\n\n  // Set values entered by uset to variables by hook\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"firstname\":\n        console.log(\"firstname is: \"+e.target.value)\n        setFirstname(e.target.value)\n        break;\n\n      case \"lastname\":\n        console.log(\"latname is: \"+e.target.value)\n        setLastname(e.target.value)\n        break;\n\n      case \"email\":\n        console.log(\"email is: \"+e.target.value)\n        setEmail(e.target.value)\n        break;\n\n      case \"password\":\n        console.log(\"password is: \"+e.target.value)\n        setPassword(e.target.value)\n        break;\n    \n      case \"confirm_password\":\n        console.log(\"confirm_password is: \"+e.target.value)\n        setConfirmPassword(e.target.value)\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  return (\n    <div>\n      <Grid\n        className = \"ui container center aligned\"\n        textAlign = \"center\"\n        verticalAlign = 'middle'\n        style = {{borderColor: \"red\", transform: \"translate(\"+adjust_vertical_postion.current+\",\"+adjust_horizontal_position.current+\")\"}}>\n        <Grid.Row>\n          <Grid.Column width = {6} style = {{minWidth:form_width, maxHeight:form_heigth}}>\n            <Card style = {{width:\"100%\"}}>\n              <Form \n                size = \"big\"\n                key = \"big\"\n                onSubmit = {handleSubmit}>\n                <h2 className = \"text-center mb-4\">Sign Up</h2>\n                <Form.Field id = \"first-name\">\n                  <Form.Input \n                    name = \"firstname\"\n                    type = \"text\"\n                    label = \"Firstname\"\n                    placeholder = \"Enter Firstname...\" \n                    icon = \"user\"\n                    onChange = {handleChange}\n                    value = {firstname} \n                    required></Form.Input>\n                </Form.Field>\n                <Form.Field id = \"last-name\">\n                  <Form.Input \n                    name = \"lastname\"\n                    type = \"text\"\n                    label = \"Lastname\"\n                    placeholder = \"Enter Lastname...\" \n                    icon = \"user\"\n                    onChange = {handleChange}\n                    value = {lastname} \n                    required></Form.Input>\n                </Form.Field>\n                <Form.Field id = \"email\">\n                  <Form.Input \n                    name = \"email\"\n                    type = \"email\"\n                    label = \"Email\"\n                    placeholder = \"Enter Email...\" \n                    icon = \"envelope\"\n                    onChange = {handleChange}\n                    value = {email} \n                    required></Form.Input>\n                </Form.Field>\n                <Form.Field id = \"password\">\n                  <Form.Input \n                    name = \"password\"\n                    type = \"password\"\n                    label = \"Enter Password\"\n                    placeholder = \"Enter Password...\" \n                    icon = \"lock\"\n                    onChange = {handleChange}\n                    value = {password} \n                    required></Form.Input>\n                </Form.Field>\n                <Form.Field id = \"password-confirm\">\n                  <Form.Input\n                    name = \"confirm_password\"\n                    type = \"password\"\n                    label = \"Confirm Password\"\n                    placeholder = \"Confirm Password...\" \n                    icon = \"lock\"\n                    onChange = {handleChange}\n                    value = {confirm_password} \n                    required></Form.Input>\n                </Form.Field>\n                <Button \n                  disabled = {loading} \n                  className = \"w-100\"\n                  color = \"blue\" \n                  size = \"big\"\n                  type = \"submit\">Sign Up</Button>\n              </Form>\n            </Card>\n          </Grid.Column>\n        </Grid.Row>\n        <div className = \"w-100 text-center mt-2\">\n          Already have an account? <Link to = \"/\" element = {<LogIn/>}>Log In</Link>\n        </div>\n      </Grid>\n    </div>\n  )\n}\n\nexport default SignUp","import React from 'react'\nimport {Route, Navigate, Outlet} from \"react-router-dom\"\nimport {useAuth} from \"../contexts/AuthContext\"\n\n\nfunction PrivateRoute ({component: Component, ...rest}) {\n    const {currentUser} = useAuth()\n  return (\n    // <Route\n    // {...rest}\n    // render={props => {\n    //     return currentUser ? <Outlet /> : <Navigate to=\"login\" />\n    // }}>\n        \n    // </Route>\n    currentUser ? <Outlet /> : <Navigate to=\"/login\" />\n  )\n}\nexport default PrivateRoute","import React,{useState,prevState} from \"react\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport {Card,Icon,Image,Button,Grid,Segment,Divider,Transition} from \"semantic-ui-react\"\nimport LogIn from \"./LogIn\"\nimport New from \"./New\"\nimport SignUp from \"./SignUp\"\nimport \"../styles/navigation.css\"\n\nfunction StartAppNav() {\n\n    const [visible,setVisibility]=useState({visible:true})\n\n    const toggleVisibility =(e)=>{\n        e.preventDefault()\n        setVisibility(!visible)\n\n    }\n    return (\n        <header id=\"navHeader\">\n            <div className=\"left\">\n                <h3 id=\"name\">\n                <Link to = \"/login\" element = { <LogIn/> }>Start The App</Link>\n                    {/* <Link \n                        to=\"/login\" \n                        element={<LogIn/>}\n                        onClick={toggleVisibility}>Emmanuel K. Agyapong</Link> */}\n                    {/* <Transition \n                        visible={visible} \n                        animation=\"scale\" \n                        duiation={500}>\n                        <Button\n                            content={visible ? 'Hide' : 'Show'}\n                            onClick={toggleVisibility}>\n                            <Link \n                                to=\"/login\"\n                                element={<LogIn/>}>Start The App</Link>\n                        </ Button>\n                    </Transition> */}\n                </h3>\n            </div>\n        </header>\n    )\n}\nexport default StartAppNav","import React, {Component, useState, useRef, useEffect, setState} from 'react';\nimport logo from './logo.svg';\nimport ReactDOM from 'react-dom'\nimport {SemanticUIReact, Segment, Container, Grid, Button} from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'semantic-ui-react';\nimport SignUp from \"./components/SignUp\"\nimport {AuthProvider} from \"../src/contexts/AuthContext\"\nimport {BrowserRouter as Router, Routes, Route, Link, useLocation} from \"react-router-dom\"\nimport Dashboard from \"./components/Dashboard\"\nimport LogIn from \"./components/LogIn\"\nimport PrivateRoute from './components/PrivateRoute'\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport NotificationsPage from \"./components/NotificationsPage\"\nimport Images from \"./components/Images\"\nimport ImageUploader from \"./components/ImageUploader\"\nimport PrivateRouteTwo from \"./components/PrivateRouteTwo\"\nimport Note from \"./components/Note\"\nimport MainPage from \"./components/MainPage\"\nimport LoadPage from \"./components/LoadPage\"\nimport LoadPosts from \"./components/LoadPosts\"\nimport New from \"./components/New\"\nimport Hamburger from 'hamburger-react'\nimport Navigation from \"./components/Navigation\"\nimport StartAppNav from \"./components/StartAppNav\"\n\nfunction App () {\n/**TODO: Fix sizes for mobile (i.e. Iphone Pro 12 and responsive are different!) */\n  return (\n    <Segment style = {{height:\"100%\"}}>\n      <Container>\n        <Grid \n          columns = {1}\n          stackable \n          centered\n          vertical\n          id = \"AppId\">\n            <div>\n                <Router>\n                  <StartAppNav />\n                  <AuthProvider>\n                    <Routes>\n                      <Route path = \"/dashboard\" element = {<Dashboard/>} />\n                      <Route path = '/' element = {<PrivateRoute/>} >\n                        <Route exact = {true} path = '/' element = {<LogIn/>} />\n                      </Route>\n                      <Route path = '/update-profile' element = {<UpdateProfile/>} />\n                      <Route path = \"/signup\" element = {<SignUp/> } />\n                      <Route path = \"/login\"element = {<LogIn/>} />\n                      <Route path = \"/forgot-password\" element = {<ForgotPassword/>} />\n                      <Route path = \"/note\" element = {<Note/>} />\n                      <Route path = \"/mainpage\" element = {<MainPage/>} />\n                      <Route path = \"/new\" element = {<New/>}/>\n                      <Route path = \"/update-profile\" element = {<UpdateProfile/>} />\n                      <Route path = \"/notifications-page\" element = {<NotificationsPage/>} />\n                      <Route path = \"/images\" element = {<Images/>} />\n                      <Route path = \"/image-uploader\" element = {<ImageUploader/>} />\n                    </Routes>\n                  </AuthProvider>\n                </Router>\n            </div>\n        </Grid>\n      </Container>\n    </Segment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}